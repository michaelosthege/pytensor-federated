name: test

on: [push]

jobs:
  test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
    - name: Cache conda
      uses: actions/cache@v3
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-py${{matrix.python-version}}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}
    - name: Cache multiple paths
      uses: actions/cache@v3
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 0
      with:
        path: |
          ~/.cache/pip
          $RUNNER_TOOL_CACHE/Python/*
          ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-build-${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{
          hashFiles('requirements.txt') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        mamba-version: "*"
        activate-environment: aefenv
        channel-priority: strict
        environment-file: environment.yml
        python-version: ${{matrix.python-version}}
        use-mamba: true
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    - name: Install pytensor-federated
      run: |
          conda activate aefenv
          pip install -e .
    - name: Run tests
      run: |
        pytest -v --cov=./pytensor_federated --cov-report xml --cov-report term-missing .
